{"version":3,"sources":["styles/GenericComponents.tsx","services/api.ts","services/SearchServices.ts","components/Card/styles.tsx","components/Card/index.tsx","pages/Movie/index.tsx","pages/Trending/index.tsx","pages/MovieDetails/styles.tsx","pages/MovieDetails/index.tsx","contexts/Search.tsx","pages/MovieSearch/index.tsx","pages/Login/styles.tsx","pages/Login/index.tsx","routes/index.tsx","components/Header/styles.tsx","components/Header/index.tsx","styles/GlobalStyles.ts","App.tsx","index.tsx"],"names":["MovieContainer","styled","div","api","axios","create","baseURL","interceptors","request","use","config","headers","Authorization","apiCalls","getTrending","get","data","results","getMovies","getGenres","genres","search","query","Container","CardImage","img","CardInfo","Note","color","Title","span","ReleaseDate","Card","history","useHistory","onClick","push","src","backdropPath","voteAverageColor","voteAverage","title","format","Date","releaseDate","locale","ptBR","Movies","useState","setData","a","SearchService","response","formattedData","map","movie","vote_average","id","genreIds","genre_ids","overview","posterPath","poster_path","original_title","release_date","backdrop_path","console","log","useEffect","length","Trending","SearchServices","ImageWrapper","MovieImage","InfoWrapper","OverView","p","GenreWrapper","Genre","MovieDetails","location","state","genreArray","setGenreArray","forEach","genre","name","searchContext","createContext","SearchProvider","children","inputValue","setInputValue","Provider","value","handleChange","event","target","useSearch","useContext","MovieSearch","getSearchedMovies","movies","Form","Logo","FormInput","input","LoginButton","button","Login","email","password","loginData","setLoginData","type","placeholder","onChange","localStorage","setItem","PrivateRoute","Component","component","rest","authenticated","getItem","render","props","to","pathname","from","Routes","exact","path","SearchInput","TabsWrapper","ul","Tab","li","Header","navigate","alt","GlobalStyles","createGlobalStyle","App","setAuthenticated","signed","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7dea8809.chunk.js","sourcesContent":["import styled from 'styled-components'\r\n\r\nexport const MovieContainer = styled.div`\r\n    width: 100%;\r\n\r\n    background: #2d2b2b;\r\n    padding-top: 7%;\r\n\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\r\n    align-items: center;\r\n    justify-items: center;\r\n`;","import axios from 'axios'\r\n\r\nexport const api = axios.create({\r\n    baseURL: \"https://api.themoviedb.org/3/\"\r\n})","import { api } from './api'\r\n\r\napi.interceptors.request.use(config => {\r\n    const token = \"dfca496b57994b17cd605b1ed8862140\"\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n\r\n    return config;\r\n})\r\n\r\nconst apiCalls = {\r\n    async getTrending() {\r\n        const data = await api.get(\"trending/movie/day?api_key=dfca496b57994b17cd605b1ed8862140\")\r\n        \r\n        return data.data.results;\r\n    },\r\n    async getMovies() {\r\n        const data = await api.get(\"movie/popular?api_key=dfca496b57994b17cd605b1ed8862140\")\r\n        \r\n        return data.data.results;\r\n    },\r\n    async getGenres() {\r\n        const data = await api.get(\"genre/movie/list?api_key=dfca496b57994b17cd605b1ed8862140\")\r\n\r\n        return data.data.genres\r\n    },\r\n    async search(query: string = '') {\r\n        const data = await api.get(`search/movie?api_key=dfca496b57994b17cd605b1ed8862140&query=${query}`)\r\n\r\n        return data.data.results\r\n    }\r\n}\r\n\r\nexport default apiCalls\r\n\r\n \r\n\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n    width: 210px;\r\n    height: 300px;\r\n\r\n    margin: 30px;\r\n\r\n    box-shadow: 0px 0px 11px 0px #232020;\r\n    position: relative;\r\n\r\n    &:hover {\r\n        transform: scale(1.05);\r\n        cursor: pointer;\r\n        transition: 100ms ease-in-out;\r\n    }\r\n`;\r\n\r\nexport const CardImage = styled.img`\r\n    width: 100%;\r\n    height: 60%;\r\n    \r\n`\r\n\r\nexport const CardInfo = styled.div`\r\n    height: 40%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: space-around;\r\n`\r\n\r\nexport const Note = styled.div<{color: string}>`\r\n    width: 35px;\r\n    height: 35px;\r\n\r\n    margin: 5px;\r\n    color: #222;\r\n    background: ${({color}) => color};\r\n\r\n    border: 1px solid #fff;\r\n    border-radius: 50%;\r\n\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\n\r\nexport const Title = styled.span`\r\n    font-size: 1em;\r\n    font-weight: bold;\r\n    text-align: center;\r\n    color: #fff;\r\n`;\r\n\r\nexport const ReleaseDate = styled.span`\r\n    text-align: center;\r\n    color: #fff;\r\n`;\r\n\r\n\r\n","import { format } from 'date-fns';\r\nimport { ptBR } from 'date-fns/locale';\r\nimport React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { Container, CardImage, CardInfo, Note, Title, ReleaseDate } from './styles';\r\n\r\ninterface MovieProps {\r\n    data: {\r\n        id: number;\r\n        genreIds: number[];\r\n        overview: string;\r\n        posterPath: string;\r\n        title: string;\r\n        releaseDate: string;\r\n        voteAverageColor: string;\r\n        voteAverage: number;\r\n        backdropPath: string;\r\n    }\r\n}\r\n\r\nconst Card: React.FC<MovieProps> = ({data}) => {\r\n\r\n  const history = useHistory()\r\n\r\n  const getDetails = () => {\r\n    history.push('movie-details', data)\r\n  }\r\n\r\n  return <Container onClick={() => getDetails()}>\r\n      <CardImage src={data ? `https://image.tmdb.org/t/p/w500${data.backdropPath}` : ''} />\r\n      <Note color={data.voteAverageColor}>{data.voteAverage}</Note>\r\n      <CardInfo>\r\n        <Title>{data.title}</Title>\r\n        <ReleaseDate>{format(new Date(data.releaseDate), \"dd/MM/yyyy\", {locale: ptBR})}</ReleaseDate>\r\n      </CardInfo>\r\n  </Container>;\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { MovieContainer } from '../../styles/GenericComponents'\r\n\r\nimport SearchService from '../../services/SearchServices'\r\nimport { useState } from 'react';\r\nimport { Movie } from '../../libs/movie';\r\nimport Card from '../../components/Card';\r\n\r\nconst Movies: React.FC = () => {\r\n\r\n  const [data, setData] = useState([])\r\n\r\n  const getMovies = async () => {\r\n    try {\r\n      const response = await SearchService.getMovies()\r\n\r\n      const formattedData = response.map((movie: any) => {\r\n        let voteAverageColor;\r\n\r\n        switch(true) {\r\n          case movie.vote_average > 6: \r\n            voteAverageColor = 'green'\r\n            break\r\n          case movie.vote_average < 6 && movie.vote_average > 3.5:\r\n            voteAverageColor = 'yellow'\r\n            break\r\n          case movie.vote_average < 3.5:\r\n            voteAverageColor = 'red'\r\n            break\r\n        }\r\n\r\n        return {\r\n          id: movie.id,\r\n          genreIds: movie.genre_ids,\r\n          overview: movie.overview,\r\n          posterPath: movie.poster_path,\r\n          title: movie.original_title,\r\n          releaseDate: movie.release_date,\r\n          voteAverageColor,\r\n          voteAverage: movie.vote_average,\r\n          backdropPath: movie.backdrop_path\r\n        }\r\n      })\r\n\r\n      setData(formattedData)\r\n    } catch(error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getMovies()\r\n  }, [])\r\n\r\n\r\n  return <MovieContainer>\r\n      {data.length > 0 && data.map((movie: Movie) => {\r\n        \r\n        return <Card key={movie.id} data={movie} />\r\n      })}\r\n  </MovieContainer>;\r\n}\r\n\r\nexport default Movies;","import React from 'react';\r\nimport { useEffect } from 'react';\r\n\r\nimport SearchServices from '../../services/SearchServices'\r\n\r\nimport Card from '../../components/Card'\r\n\r\nimport { MovieContainer } from '../../styles/GenericComponents'\r\nimport { useState } from 'react';\r\nimport { Movie } from '../../libs/movie';\r\n\r\n\r\nconst Trending: React.FC = () => {\r\n\r\n  const [data, setData] = useState([])\r\n\r\n  const getTrending = async () => {\r\n    try {\r\n      const response = await SearchServices.getTrending()\r\n\r\n      const formattedData = response.map((movie: any) => {\r\n\r\n        let voteAverageColor;\r\n\r\n        switch(true) {\r\n          case movie.vote_average > 6: \r\n            voteAverageColor = 'green'\r\n            break\r\n          case movie.vote_average < 6 && movie.vote_average > 3.5:\r\n            voteAverageColor = 'yellow'\r\n            break\r\n          case movie.vote_average < 3.5:\r\n            voteAverageColor = 'red'\r\n            break\r\n        }\r\n\r\n        return {\r\n          id: movie.id,\r\n          genreIds: movie.genre_ids,\r\n          overview: movie.overview,\r\n          posterPath: movie.poster_path,\r\n          title: movie.original_title,\r\n          releaseDate: movie.release_date,\r\n          voteAverageColor,\r\n          voteAverage: movie.vote_average,\r\n          backdropPath: movie.backdrop_path\r\n        }\r\n      })\r\n\r\n      setData(formattedData)\r\n    } catch(error) {\r\n      console.log(error)\r\n    }\r\n  } \r\n\r\n  useEffect(() => {\r\n    getTrending()\r\n  }, [])\r\n\r\n  return (\r\n    <MovieContainer>\r\n      {data.length > 0 && data.map((movie: Movie) => {\r\n\r\n        return <Card  key={movie.id} data={movie} />\r\n      })}\r\n  </MovieContainer>\r\n  );\r\n}\r\n\r\nexport default Trending;","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n\r\n    background: #2d2b2b;\r\n\r\n    overflow: auto;\r\n\r\n    padding: 10% 30px 50px 50px;\r\n\r\n    display: grid;\r\n    grid-template-rows: 1fr auto;\r\n    grid-template-areas:\r\n        'image info'\r\n        'genre info';\r\n\r\n\r\n    position: relative;\r\n\r\n    @media (max-height: 750px) {\r\n        padding: 200px 30px 50px 50px;\r\n    }\r\n\r\n`;\r\n\r\nexport const ImageWrapper = styled.div`\r\n    width: 100%;\r\n    height: 85%;\r\n    min-height: 500px ;\r\n\r\n    box-shadow: 0px 0px 11px 0px #232020;\r\n\r\n    grid-area: image;\r\n\r\n    align-self: center;\r\n\r\n    position: relative;\r\n`;\r\n\r\nexport const MovieImage = styled.img<{src: string}>`\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nexport const InfoWrapper = styled.div`\r\n    height: 100%;\r\n\r\n    grid-area: info;\r\n\r\n    padding: 10px 30px;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n\r\n    align-self: center;\r\n\r\n`;\r\n\r\nexport const Title = styled.span`\r\n    font-size: 1em;\r\n    font-weight: bold;\r\n\r\n    margin-bottom: 50px;\r\n    color: #fff;\r\n`;\r\n\r\nexport const OverView = styled.p`\r\n    text-align: justify;\r\n    color: #fff;\r\n`;\r\n\r\nexport const GenreWrapper = styled.div`\r\n    width: 100%;\r\n    height: 50%;\r\n\r\n    display: flex;\r\n\r\n    grid-area: genre;\r\n    align-self: center;\r\n\r\n    \r\n`;\r\n\r\nexport const Genre = styled.span`\r\n    color: #fff;\r\n\r\n    & + span::before {\r\n        content: \" | \";\r\n        margin: 0 10px;\r\n    }\r\n`;\r\n\r\nexport const Note = styled.div`\r\n    width: 35px;\r\n    height: 35px;\r\n\r\n    margin: 5px;\r\n    color: #222;\r\n    background: ${({color}) => color};\r\n\r\n    border: 1px solid #fff;\r\n    border-radius: 50%;\r\n\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\n\r\n","import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { Movie } from '../../libs/movie';\r\n\r\nimport { Container, MovieImage, Title, OverView, GenreWrapper, Genre, Note, InfoWrapper, ImageWrapper } from './styles';\r\n\r\nimport SearchServices from '../../services/SearchServices'\r\nimport { useState } from 'react';\r\n\r\nconst MovieDetails: React.FC = ({history}: any) => {\r\n\r\n\r\n  const data: Movie = (history.location.state)\r\n\r\n  const [genreArray, setGenreArray] = useState<string[]>([])\r\n\r\n  const getGenres = async () => {\r\n    try {\r\n      const response = await SearchServices.getGenres()\r\n      const genreIds = data.genreIds\r\n        \r\n      genreIds.forEach(id => {\r\n        return response.forEach((genre: any) => {\r\n          if (genre.id === id) {\r\n            setGenreArray([...genreArray, genre.name])\r\n          }\r\n        })\r\n      })\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getGenres()\r\n  }, [])\r\n\r\n  return <Container>\r\n    <ImageWrapper>\r\n      <MovieImage src={`https://image.tmdb.org/t/p/w500${data.posterPath}`}/>\r\n      <Note color={data.voteAverageColor}>{data.voteAverage}</Note>\r\n    </ImageWrapper>\r\n    <InfoWrapper>\r\n      <Title>{data.title}</Title>\r\n      <OverView>{data.overview}</OverView>\r\n    </InfoWrapper>\r\n    <GenreWrapper>\r\n      {genreArray.map(genre => {\r\n        return <Genre key={genre}>{genre}</Genre>\r\n      })}\r\n    </GenreWrapper>\r\n  </Container>;\r\n}\r\n\r\nexport default MovieDetails;","import React, { useState } from 'react';\r\nimport { useContext } from 'react';\r\nimport { createContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport SearchServices from '../services/SearchServices'\r\n\r\nconst searchContext = createContext({} as any)\r\n\r\n\r\n\r\nexport const SearchProvider: React.FC = ({children}: any) => {\r\n    \r\n    const [inputValue, setInputValue] =  useState('')\r\n    const history = useHistory()\r\n\r\n    const handleChange = (event: any) => {\r\n      setInputValue(event.target.value)\r\n     \r\n      if (event.target.value.length === 0) {\r\n          return history.push(\"/\")\r\n      }\r\n\r\n      return history.push('movie-search')\r\n    }\r\n\r\n    const getMovies = async () => {\r\n        try {\r\n            const response = await SearchServices.search(inputValue)\r\n            \r\n            const formattedData = response.map((movie: any) => {\r\n                let voteAverageColor;\r\n\r\n                switch(true) {\r\n                case movie.vote_average > 6: \r\n                    voteAverageColor = 'green'\r\n                    break\r\n                case movie.vote_average < 6 && movie.vote_average > 3.5:\r\n                    voteAverageColor = 'yellow'\r\n                    break\r\n                case movie.vote_average < 3.5:\r\n                    voteAverageColor = 'red'\r\n                    break\r\n                }\r\n\r\n                return {\r\n                    id: movie.id,\r\n                    genreIds: movie.genre_ids,\r\n                    overview: movie.overview,\r\n                    posterPath: movie.poster_path,\r\n                    title: movie.original_title,\r\n                    releaseDate: movie.release_date,\r\n                    voteAverageColor,\r\n                    voteAverage: movie.vote_average,\r\n                    backdropPath: movie.backdrop_path\r\n                }\r\n            })\r\n            return formattedData\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    return <searchContext.Provider value={{inputValue, handleChange, getMovies}}>\r\n        {children}\r\n    </searchContext.Provider>\r\n}\r\n\r\nexport const useSearch = () => {\r\n    const context = useContext(searchContext)\r\n\r\n    return context;\r\n}\r\n\r\n","import React, { useState } from 'react';\r\n\r\nimport { MovieContainer } from '../../styles/GenericComponents';\r\nimport Card from '../../components/Card';\r\nimport { useSearch } from '../../contexts/Search';\r\nimport { useEffect } from 'react';\r\nimport { Movie } from '../../libs/movie';\r\n\r\nconst MovieSearch: React.FC = () => {\r\n\r\n    const { getMovies, inputValue } = useSearch()\r\n    const [data, setData] = useState<Movie[]>([])\r\n\r\n    const getSearchedMovies = async () => {\r\n        const movies = await getMovies()\r\n        setData(movies)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getSearchedMovies()\r\n    }, [inputValue])\r\n\r\n\r\n  return <MovieContainer>\r\n      \r\n      {data.length > 0 && \r\n          data.map(movie => (\r\n            <Card key={movie.id} data={movie}/>\r\n          ))\r\n      }\r\n  </MovieContainer>;\r\n}\r\n\r\nexport default MovieSearch;","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    background: rgb(34,34,34);\r\n    background: linear-gradient(117deg, rgba(34,34,34,1) 0%, rgba(121,9,9,1) 100%, rgba(0,212,255,1) 100%);\r\n\r\n`;\r\n\r\nexport const Form = styled.div`\r\n    width: 600px;\r\n    height: 600px;\r\n    background: #fff;\r\n\r\n    padding: 20px;\r\n\r\n    border-radius: 10px;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-around;\r\n    align-items: flex-end;\r\n`;\r\n\r\nexport const Logo = styled.img`\r\n    width: 100%;\r\n    height: 100px;\r\n`;\r\n\r\nexport const FormInput = styled.input`\r\n    height: 50px;\r\n    width: 100%;\r\n\r\n    padding: 5px;\r\n\r\n    border:1px solid #222;\r\n    border-radius: 10px;\r\n\r\n\r\n`;\r\n\r\nexport const LoginButton = styled.button`\r\n    width: 50%;\r\n    height: 50px;\r\n\r\n    background: rgba(121,9,9,1);\r\n    color: #fff;\r\n    outline: 0;\r\n    border: 0;\r\n    border-radius: 10px;\r\n\r\n    &:focus {\r\n        background: #fff;\r\n        background:rgba(121,9,9,1);\r\n    }\r\n\r\n    cursor: pointer;\r\n`;\r\n\r\n","import React from 'react';\r\nimport { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { Container, Form, Logo, FormInput, LoginButton } from './styles';\r\n\r\nconst Login: React.FC = () => {\r\n\r\n    const history = useHistory()\r\n\r\n    const [loginData, setLoginData] = useState({\r\n        email: '',\r\n        password: ''\r\n    })\r\n\r\n    const handleLogin = () => {\r\n\r\n        if (loginData.email === 'user@gmail.com' && loginData.password === '12345') {\r\n            localStorage.setItem('signed', 'true')\r\n            history.push('/')\r\n        }\r\n    }\r\n\r\n    const handleChange = (event: any) => {\r\n        const value = event.target.value\r\n        setLoginData({\r\n            ...loginData, [event.target.name]: value\r\n        })\r\n\r\n    }\r\n\r\n    return <Container>\r\n        <Form>\r\n            <Logo src=\"https://i.imgur.com/7WULlyC.png\" />\r\n            <FormInput \r\n                name=\"email\" \r\n                type=\"text\" \r\n                placeholder=\"Dgite sua emaaial\" \r\n                onChange={handleChange} \r\n                value={loginData.email}\r\n            />\r\n            <FormInput \r\n                name=\"password\" \r\n                type=\"password\" \r\n                placeholder=\"Digite seu senha\" \r\n                onChange={handleChange} \r\n                value={loginData.password}\r\n            />\r\n            <LoginButton onClick={handleLogin}>Login</LoginButton>\r\n        </Form>\r\n    </Container>;\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport Movies from '../pages/Movie';\r\nimport Trending from '../pages/Trending'\r\nimport MovieDetails from '../pages/MovieDetails';\r\nimport MovieSearch from '../pages/MovieSearch';\r\nimport Login from '../pages/Login';\r\n\r\nconst PrivateRoute = ({component : Component , ...rest}: any) => {\r\n\r\n  const authenticated = localStorage.getItem('signed') === 'true' ? true : false\r\n\r\n  return <Route {...rest} render={props => (\r\n    authenticated ? \r\n      <Component {...props } /> \r\n    : <Redirect to={{ pathname: '/login', state: {from: props.location }}}/>\r\n  )} />\r\n}\r\n\r\nconst Routes: React.FC = () => {\r\n  return (\r\n    <Switch >\r\n        <PrivateRoute exact path=\"/trending\" component={Trending}/>\r\n        <PrivateRoute exact path=\"/movies\" component={Movies}/>\r\n        <PrivateRoute exact path=\"/movie-details\" component={MovieDetails}/>\r\n        <PrivateRoute exact path=\"/movie-search\" component={MovieSearch}/>\r\n        <Route exact path=\"/login\" component={Login}/>\r\n        <Redirect from=\"/\" to=\"trending\" />\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default Routes;","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n    width: 100%;\r\n    height: 10%;\r\n    min-height: 85px;\r\n\r\n    padding: 0 10px;\r\n    background: #222;\r\n    color: #fff;\r\n\r\n    display: grid;\r\n    grid-template-columns: 9fr 5fr 1fr;    \r\n    grid-gap: 10px;\r\n    align-items: center;\r\n\r\n    position: fixed;\r\n    overflow: hidden;\r\n    z-index: 1;\r\n  \r\n  img {\r\n      cursor: pointer;\r\n      width: 190px;\r\n  }\r\n`;\r\n\r\nexport const SearchInput = styled.input`\r\n    width: 200px;\r\n    height: 50%;\r\n\r\n    padding: 10px;\r\n\r\n    border: 1px solid #fff;\r\n    border-radius: 5px;\r\n\r\n    color: #fff;\r\n`;\r\n\r\nexport const TabsWrapper = styled.ul`\r\n    height: 100%;\r\n    width: 100%;\r\n\r\n    list-style: none;\r\n\r\n    display: flex;\r\n    justify-content: space-around;\r\n    \r\n`;\r\n\r\nexport const Tab = styled.li`\r\n    width: 100%;\r\n    height: 100%;\r\n\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    &:hover {\r\n        background: #444444;\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\n","import React from 'react';\r\nimport { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useSearch } from '../../contexts/Search';\r\n\r\nimport { Container, SearchInput, TabsWrapper, Tab } from './styles';\r\n\r\n\r\nconst Header: React.FC = () => {\r\n\r\n  const history = useHistory()\r\n\r\n  const {handleChange, inputValue} = useSearch()\r\n\r\n  const navigate = (path: string) => {\r\n    history.push(path)\r\n  }\r\n\r\n  return <Container>\r\n    <img src=\"https://i.imgur.com/7WULlyC.png\" alt=\"Logo\" onClick={() => navigate('/')}/>\r\n    <TabsWrapper>\r\n      <Tab onClick={() => navigate('/trending')}>Trending</Tab>\r\n      <Tab onClick={() => navigate('/movies')}>Movie</Tab>\r\n    </TabsWrapper>\r\n    <SearchInput placeholder=\"Buscar Filmes\" onChange={handleChange} value={inputValue}/>\r\n  </Container>;\r\n}\r\n\r\nexport default Header;","import { createGlobalStyle } from 'styled-components'\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n    * {\r\n        margin: 0;\r\n        padding: 0;\r\n        box-sizing: border-box;\r\n        font-family: 'Roboto', sans-serif;\r\n    }\r\n\r\n    input {\r\n        border: 0;\r\n        background: 0;\r\n        outline: 0;\r\n    }\r\n\r\n    html, body, #root {\r\n        height: 100%;\r\n        background: #2d2b2b;\r\n    }\r\n`;","import Routes from './routes';\r\n\r\nimport Header from './components/Header'\r\nimport { GlobalStyles } from './styles/GlobalStyles'\r\nimport { SearchProvider } from './contexts/Search';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\n\r\nfunction App() {\r\n\r\n  const [authenticated, setAuthenticated] = useState(false)\r\n\r\n  useEffect(() => {\r\n    const signed = localStorage.getItem('signed') === 'true' ? true : false\r\n    setAuthenticated(signed)\r\n  }, [authenticated])\r\n\r\n  return (\r\n    <SearchProvider>\r\n      {authenticated && <Header /> }\r\n      <Routes />\r\n      <GlobalStyles />\r\n    </SearchProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { BrowserRouter } from 'react-router-dom'\r\n\r\nimport App from './App';\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}